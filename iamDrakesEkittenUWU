do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==4) then v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v82=v3(v1(v29,16));if v28 then local v91=0;local v92;while true do if (v91==0) then v92=v6(v82,v28);v28=nil;v91=1;end if (v91==1) then return v92;end end else return v82;end end end);local function v30(v31,v32,v33)if v33 then local v83=(v31/((1 + 0 + 1)^(v32-(802 -(251 + 550)))))%((4 -2)^(((v33-(1 + 0)) -(v32-(1006 -(437 + 568)))) + (1532 -(86 + 1445)))) ;return v83-(v83%(1 + 0)) ;else local v84=(57 -(42 + 13))^(v32-((386 -(122 + 263)) -(1861 -(666 + 1195)))) ;return (((v31%(v84 + v84))>=v84) and (150 -(141 + 8))) or (1524 -(1457 + 67)) ;end end local function v34()local v47=815 -(205 + 610) ;local v48;while true do if (v47==(1 + 0)) then return v48;end if (v47==((0 + 0) -(0 -0))) then v48=v2(v25,v27,v27);v27=v27 + 1 ;v47=1 + (217 -(166 + 51)) ;end end end local function v35()local v49,v50=v2(v25,v27,v27 + (6 -4) );v27=v27 + 2 ;return (v50 * (723 -467)) + v49 ;end local function v36()local v51=509 -(305 + 204) ;local v52;local v53;local v54;local v55;while true do if (v51==(1 + (767 -(313 + 454)))) then return (v55 * (11036769 + 5740447)) + (v54 * (66239 -(408 + 295))) + (v53 * (425 -(297 -128))) + v52 ;end if (v51==(0 -0)) then v52,v53,v54,v55=v2(v25,v27,v27 + (6 -3) );v27=v27 + 4 ;v51=1 -0 ;end end end local function v37()local v56=v36();local v57=v36();local v58=1;local v59=(v30(v57,1 -0 ,16 + 4 ) * ((2 + 0)^(1835 -(497 + 1306)))) + v56 ;local v60=v30(v57,10 + 11 ,64 -(12 + 21) );local v61=((v30(v57,292 -(91 + 169) )==1) and  -(1 + 0)) or ((1530 -(1041 + 488)) -0) ;if (v60==((0 -0) + 0)) then if (v59==(511 -(391 + (212 -92)))) then return v61 * (0 -0) ;else v60=4 -3 ;v58=42 -(5 + 37) ;end elseif (v60==(1245 + 802)) then return ((v59==(0 -0)) and (v61 * ((1988 -(1490 + 497))/0))) or (v61 * NaN) ;end return v9(v61,v60-(1378 -(2209 -(938 + 916))) ) * (v58 + (v59/((2 + 0)^(44 + 8)))) ;end local function v38(v39)local v62;if  not v39 then local v85=659 -(294 + 365) ;while true do if (v85==(0 -0)) then v39=v36();if (v39==(0 -(148 -(56 + 92)))) then return "";end break;end end end v62=v4(v25,v27,(v27 + v39) -1 );v27=v27 + v39 ;local v63={};for v74=(1 + 0) -(0 -0) , #v62 do v63[v74]=v3(v2(v4(v62,v74,v74)));end return v7(v63);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v64=436 -(44 + 392) ;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==1) then local v86=0 -0 ;local v87;while true do if (v86~=(1780 -(818 + 962))) then else v87=1875 -(1513 + 362) ;while true do if (v87~=(1689 -(313 + 1376))) then else v68={v65,v66,nil,v67};v69=v36();v87=1;end if (1==v87) then v70={};v64=777 -(483 + 292) ;break;end end break;end end end if (v64==2) then local v88=0 -0 ;while true do if (v88~=0) then else for v112=1,v69 do local v113=1716 -(1378 + 338) ;local v114;local v115;local v116;local v117;while true do if (v113==0) then v114=0;v115=nil;v113=1;end if (v113~=(1525 -(722 + 801))) then else while true do if (v114~=(0 + 0)) then else v115=0;v116=nil;v114=1;end if (v114~=(41 -(13 + 27))) then else v117=nil;while true do if (v115~=0) then else local v136=0;local v137;while true do if (v136~=(0 -0)) then else v137=993 -(192 + 801) ;while true do if (v137~=1) then else v115=1786 -(1175 + 610) ;break;end if (v137==(0 -0)) then local v264=0 -0 ;while true do if (v264~=(1271 -(162 + 1109))) then else local v286=0 + 0 ;while true do if (v286==0) then v116=v34();v117=nil;v286=1;end if (v286~=(643 -(87 + 555))) then else v264=2 -1 ;break;end end end if (v264==(1 + 0)) then v137=1;break;end end end end break;end end end if (v115==1) then if (v116==(2 -1)) then v117=v34()~=(1231 -(1160 + 71)) ;elseif (v116==(3 -1)) then v117=v37();elseif (v116~=3) then else v117=v38();end v70[v112]=v117;break;end end break;end end break;end if (v113~=1) then else v116=nil;v117=nil;v113=2 -0 ;end end end v68[3]=v34();v88=1;end if (v88==1) then for v118=856 -(301 + 554) ,v36() do local v119=0;local v120;local v121;while true do if (1~=v119) then else while true do if (v120==(0 -0)) then v121=v34();if (v30(v121,1 -0 ,1 -0 )~=(1536 -(1235 + 301))) then else local v131=0;local v132;local v133;local v134;local v135;while true do if (v131~=(10 -(5 + 5))) then else local v140=0;while true do if (v140~=(0 -0)) then else v132=0;v133=nil;v140=412 -(183 + 228) ;end if (v140==1) then v131=1;break;end end end if (v131~=2) then else while true do if (v132==(0 + 0)) then local v187=0 -0 ;while true do if (v187==1) then v132=1;break;end if (v187==(0 + 0)) then local v273=0;local v274;while true do if (v273==(678 -(180 + 498))) then v274=0;while true do if (v274==(2 -1)) then v187=1;break;end if (v274==(321 -(174 + 147))) then v133=v30(v121,2 -0 ,3);v134=v30(v121,15 -11 ,16 -10 );v274=1;end end break;end end end end end if (1==v132) then local v188=120 -(22 + 98) ;local v189;while true do if (v188==0) then v189=0;while true do if (1==v189) then v132=2;break;end if (0==v189) then local v313=0;while true do if (v313==(0 + 0)) then v135={v35(),v35(),nil,nil};if (v133==(0 + 0)) then local v389=0 + 0 ;while true do if (v389~=0) then else v135[3 -0 ]=v35();v135[4]=v35();break;end end elseif (v133==1) then v135[5 -2 ]=v36();elseif (v133==(5 -3)) then v135[1 + 2 ]=v36() -((249 -(78 + 169))^16) ;elseif (v133~=(10 -7)) then else local v419=0;local v420;local v421;while true do if (v419==(1 + 0)) then while true do if (v420==(1370 -(1114 + 256))) then v421=1550 -(988 + 562) ;while true do if ((732 -(481 + 251))==v421) then v135[3]=v36() -((250 -(225 + 23))^16) ;v135[289 -(37 + 248) ]=v35();break;end end break;end end break;end if (v419==0) then v420=0 -0 ;v421=nil;v419=1 + 0 ;end end end v313=1;end if (v313==1) then v189=2 -1 ;break;end end end end break;end end end if (v132~=3) then else if (v30(v134,1 + 2 ,3)==(1 + 0)) then v135[4]=v70[v135[19 -15 ]];end v65[v118]=v135;break;end if (v132==(3 -1)) then local v191=0;while true do if (v191==1) then v132=8 -5 ;break;end if (v191~=0) then else if (v30(v134,2 -1 ,1)==1) then v135[7 -5 ]=v70[v135[2]];end if (v30(v134,2 -0 ,7 -5 )~=(2 -1)) then else v135[3]=v70[v135[597 -(74 + 520) ]];end v191=1;end end end end break;end if (v131~=1) then else local v141=177 -(26 + 151) ;local v142;while true do if (v141==(0 + 0)) then v142=0 -0 ;while true do if (v142==(180 -(114 + 66))) then local v275=280 -(244 + 36) ;while true do if (v275~=(1 -0)) then else v142=4 -3 ;break;end if (v275==(1392 -(555 + 837))) then v134=nil;v135=nil;v275=1;end end end if (v142~=1) then else v131=2;break;end end break;end end end end end break;end end break;end if (v119~=(0 -0)) then else local v129=0 + 0 ;local v130;while true do if (v129==0) then v130=0 -0 ;while true do if (v130==0) then local v139=269 -(243 + 26) ;while true do if (v139~=(988 -(480 + 508))) then else v120=0;v121=nil;v139=1;end if (v139==1) then v130=2 -1 ;break;end end end if (v130==1) then v119=2 -1 ;break;end end break;end end end end end v64=1386 -(292 + 1091) ;break;end end end if (v64==0) then local v89=0;local v90;while true do if (v89==(1180 -(989 + 191))) then v90=0 -0 ;while true do if (0==v90) then local v126=0;while true do if (v126==0) then v65={};v66={};v126=1 + 0 ;end if (v126==1) then v90=1180 -(186 + 993) ;break;end end end if (v90==(951 -(901 + 49))) then v67={};v64=1;break;end end break;end end end if (v64==(5 -2)) then for v93=1254 -(466 + 787) ,v36() do v66[v93-(1 + 0) ]=v42();end for v95=1 + 0 ,v36() do v67[v95]=v36();end return v68;end end end local function v43(v44,v45,v46)local v71=v44[1];local v72=v44[2];local v73=v44[3];return function(...)local v76=0;local v77;local v78;local v79;local v80;local v81;while true do if (v76==1) then v79={...};v80=v13("#",...) -1 ;v76=2;end if (v76==2) then v81=nil;v81=function()local v97=v71;local v98=v72;local v99=v73;local v100=v41;local v101={};local v102={};local v103={};for v108=0 + 0 ,v80 do if ((4922>4657) and (v108>=v99)) then v101[v108-v99 ]=v79[v108 + (2 -1) ];else v103[v108]=v79[v108 + (2 -1) ];end end local v104=(v80-v99) + (1331 -(797 + 533)) ;local v105;local v106;while true do local v109=(842 -(119 + 723)) + 0 ;while true do if (((2131 + 307)<=4869) and (v109==(2 -1))) then if ((v106<=(646 -(408 + 215))) or ((4036 -(316 + (53 -32)))==(4287 -(865 + 705)))) then if (((12 + 641)<=(6470 -(209 + 1544))) and (v106<=(28 -17))) then if ((v106<=(775 -(703 + 67))) or (1256>(1779 + 318))) then if ((v106<=(1571 -(1373 + 196))) or (2542>(1113 + 3705))) then if ((v106<=0) or (3512<=(4256 -1518))) then local v143=(1331 -(561 + 770)) + 0 ;local v144;local v145;local v146;local v147;while true do if ((696<(3686 -1889)) and ((0 -0)==v143)) then v144=1514 -(171 + 1343) ;v145=nil;v143=1;end if ((v143==(1 + 0)) or (1301==612)) then v146=nil;v147=nil;v143=1 + 1 ;end if (((426 + 1770)<=(1999 + 2186)) and ((5 -3)==v143)) then while true do if ((v144==(0 + 0)) or ((1393 + 721)==(1402 -(784 + 311)))) then local v287=0 + 0 ;while true do if (((4335 -(1258 + 103))>(333 + 312)) and (v287==0)) then v145=v105[1836 -(1712 + 122) ];v146=v103[v145];v287=1;end if ((v287==(1 -0)) or ((2891 + (2281 -1396))==(1588 + 928))) then v144=1 + 0 ;break;end end end if ((v144==((1 -0) + 0)) or ((5895 -(354 + 548))<3207)) then v147=v103[v145 + (1794 -(1270 + 522)) + 0 ];if ((v147>(0 -0)) or ((4112 -2438)>3744)) then if (((3947 -1399)<(9983 -5818)) and (v146>v103[v145 + (683 -(611 + 71)) ])) then v77=v105[(28 -21) -4 ];else v103[v145 + (1035 -(506 + 526)) ]=v146;end elseif ((v146<v103[v145 + (2 -1) ]) or ((775 -338)==4318)) then v77=v105[(410 + 994) -(179 + (3109 -(827 + 1060))) ];else v103[v145 + 3 ]=v146;end break;end end break;end end elseif (((5729 -2047)==(4507 -(210 + 615))) and (v106>((5 -3) -1))) then local v192=0 + 0 ;local v193;local v194;local v195;while true do if (((2008 -(137 + 786))>681) and ((1 + (1539 -(1246 + 293)))==v192)) then v195=nil;while true do if (((1319 + (1991 -(21 + 1606)))<2370) and (v193==(0 -0))) then v194=0 -0 ;v195=nil;v193=1 + 0 + 0 ;end if (((5575 -1940)<=((7255 -(96 + 1329)) -(1155 + 506))) and (v193==(99 -(10 + 35 + 53)))) then while true do if ((v194==(0 + 0)) or ((9462 -5091)<(3787 -(144 + 586)))) then v195=v105[1296 -(1190 + 104) ];v103[v195]=v103[v195](v14(v103,v195 + (2 -1) ,v78));break;end end break;end end break;end if ((2889>((3391 -(445 + 660)) -(10 + 5 + 501))) and (v192==((1490 -(1393 + 97)) -0))) then v193=0;v194=nil;v192=1;end end elseif (((5437 -3352)>(2000 -(715 + 520))) and (v103[v105[2]]==v105[7 -3 ])) then v77=v77 + (1 -0) ;else v77=v105[(2904 -2028) -(611 + 262) ];end elseif (((540 -(99 + 134))==(454 -147)) and (v106<=(1321 -(1207 + 111)))) then if ((v103[v105[2]]~=v105[545 -(200 + 117 + 224) ]) or (((392 + 806) -(248 + 916))>=(8610 -6279))) then v77=v77 + (3 -2) + 0 ;else v77=v105[3];end elseif (((6107 -4504)<(1887 + 980 + 639)) and (v106==(2 + 2))) then local v197=0 + 0 ;local v198;while true do if ((((1653 -(60 + 197)) + 3035)>4338) and (v197==0)) then v198=v105[1 + 1 ];do return v103[v198](v14(v103,v198 + (1563 -(1536 + 4 + 22)) ,v105[1 + 2 ]));end break;end end else local v199=1779 -(1263 + 516) ;local v200;local v201;while true do if ((((1209 -(357 + 175)) -(291 + 13))>(712 -(132 + 218))) and (v199==(26 -((1776 -(1517 + 235)) + 1)))) then while true do if ((v200==(0 -0)) or (21>=(1879 -(458 + 1174)))) then v201=v105[2 -0 ];v103[v201](v14(v103,v201 + 1 + 0 ,v78));break;end end break;end if ((v199==(0 -0)) or (4997<1839)) then v200=0;v201=nil;v199=1 + 0 ;end end end elseif ((1770<=(3714 + 789)) and (v106<=(5 + 3))) then if ((v106<=(2 + 4)) or ((13631 -9690)<=(1374 -(875 + 85)))) then local v148=1426 -(268 + 1158) ;local v149;local v150;local v151;local v152;while true do if (((8577 -4703)<=(6253 -(834 + 880))) and (v148==2)) then while true do if ((((3023 -(1020 + 265)) + 529)==(838 + 1429)) and (v149==(3 -2))) then v152=1904 -(1144 + 760) ;for v306=v150,v105[3 + 1 ] do local v307=0 -0 ;local v308;while true do if ((v307==(0 + 0)) or ((31 + 75)>=362)) then v308=0;while true do if ((3166>=2440) and (v308==0)) then v152=v152 + (2 -1) ;v103[v306]=v151[v152];break;end end break;end end end break;end if (((0 -0)==v149) or ((2519 + 1176)>=(3878 + 651))) then v150=v105[2];v151={v103[v150](v14(v103,v150 + ((820 + 219) -(546 + 492)) ,v78))};v149=1;end end break;end if ((v148==(0 -0)) or ((518 -138)>(807 + 691 + 1444))) then v149=(1394 -(883 + 511)) + 0 ;v150=nil;v148=1828 -((2589 -(496 + 1269)) + 1003) ;end if ((v148==(1 -0)) or ((311 + 3887)<=(5918 -(5188 -1501)))) then v151=nil;v152=nil;v148=2;end end elseif (((4975 -(749 + 265))>(44 + 430)) and (v106==(7 + 0 + 0))) then v103[v105[1 + 1 ]]={};else v103[v105[2 + (753 -(257 + 496)) ]]=v103[v105[11 -8 ]][v105[6 -2 ]];end elseif ((v106<=(1340 -(184 + 501 + 646))) or ((4098 -(521 + 468))<=(3092 -(141 + 59 + 26)))) then v103[v105[1 + 1 ]][v105[7 -4 ]]=v103[v105[4]];elseif (((7988 -3524)>(887 -(242 + 265))) and (v106==(930 -(51 + 869)))) then local v205=0 + 0 ;local v206;while true do if ((v205==0) or ((1870 + 2829)<(2668 -1633))) then v206=v105[1 + 1 + 0 ];v103[v206]=v103[v206](v103[v206 + 1 + (1807 -(1105 + 702)) ]);break;end end else v103[v105[2]]=v103[v105[3]]%v105[3 + 1 ] ;end elseif ((v106<=17) or ((961 + 3862)==(3134 -(123 + (727 -411))))) then if (((45 + 23)<=(6125 -((3377 -(1584 + 212)) + (379 -114)))) and (v106<=((213 + 25) -(63 + 161)))) then if ((1475<=((10381 -(710 + 747)) -6099)) and (v106<=(4 + 8))) then local v155=0 -0 ;local v156;local v157;local v158;while true do if ((4439>=(8504 -5012)) and (v155==(2 -1))) then v158=nil;while true do if ((1209==(421 + 788)) and (v156==(0 + 0 + 0))) then local v290=0;while true do if (((13436 -9196)>(1768 + 1214)) and (v290==(502 -(404 + 97)))) then v156=1 -0 ;break;end if (((5013 -(1459 + 24))==(11165 -7635)) and (v290==(0 + 0))) then v157=0 -0 ;v158=nil;v290=1 + 0 ;end end end if (((574 -(539 + 34))==v156) or ((1503 -(97 + 197))==(3087 -(2324 -(135 + 303))))) then while true do if (((7630 -2826)==(11421 -(702 + 5915))) and (v157==0)) then v158=v105[1 + 0 + 1 ];v103[v158](v14(v103,v158 + (1378 -(758 + 619)) ,v105[(2 -1) + 2 ]));break;end end break;end end break;end if (((3895 -(582 + 489))==(4846 -2022)) and ((1329 -(171 + 1158))==v155)) then v156=931 -((2494 -1634) + 71) ;v157=nil;v155=1 + 0 ;end end elseif (((535 + 25)==(360 + 200)) and (v106==(45 -32))) then for v265=v105[2 + 0 ],v105[3] do v103[v265]=nil;end else local v208=0;local v209;while true do if (((1825 -(142 + 1683))==v208) or ((4217 -(722 + 300))<=(4344 -(1441 + 62)))) then v209=v105[1923 -((674 -372) + 1619) ];v103[v209]=v103[v209]();break;end end end elseif ((v106<=(15 + 0)) or ((2448 -(92 + 178))>2185)) then v103[v105[228 -((2071 -(1130 + 858)) + (1873 -(1595 + 135))) ]]=v103[v105[(2 + 2) -1 ]];elseif (((4600 -2793)<((7747 -4391) + 435)) and (v106>(59 -43))) then local v210=(842 -(243 + 599)) + (1329 -(1241 + 88)) ;local v211;local v212;while true do if (((2699 -(17 + 494))<=(1880 + 2994)) and (v210==0)) then local v281=0 + 0 ;while true do if ((v281==0) or ((1649 + 241)>2605)) then v211=0 -0 ;v212=nil;v281=1;end if (((3846 + 99)>(255 + 2276)) and (((2 -1) -0)==v281)) then v210=2 -1 ;break;end end end if ((v210==(2 -1)) or ((192 + 658 + 1894)>=((3134 -(644 + 204)) + 2440))) then while true do if ((v211==(637 -(99 + 538))) or ((3072 -(60 + 211))==1557)) then v212=v105[5 -3 ];do return v14(v103,v212,v78);end break;end end break;end end else local v213=0;local v214;while true do if ((4448>(1692 -(68 + 539))) and (v213==(339 -(79 + 127 + 133)))) then v214=v105[2];v103[v214](v103[v214 + 1 + 0 ]);break;end end end elseif ((v106<=(7 + 13)) or ((6736 -(1611 + 33 + 118))<(14425 -11388))) then if ((((228 + 3965) -(319 + 960))>=(908 + 1889)) and (v106<=(4 + 14))) then if (((9759 -6038)>((1628 -(209 + 1382)) -(122 -(25 + 74)))) and (v105[1 + 1 ]==v103[v105[8 -4 ]])) then v77=v77 + 1 ;else v77=v105[2 + 1 ];end elseif ((1729<=(3072 + 492)) and (v106>19)) then do return;end else local v216=770 -(283 + 487) ;local v217;local v218;local v219;while true do if ((v216==(0 + 0)) or ((4549 -(1538 + 105))>(87 + 3236))) then v217=0;v218=nil;v216=529 -(485 + (103 -60)) ;end if (((3560 -1665)<=(5064 -(910 + 254))) and (v216==(1 + 0))) then v219=nil;while true do if (((578 + (1019 -(434 + 110)))<2493) and (v217==0)) then local v316=0;while true do if (((2569 + 604)>2096) and (v316==1)) then v217=1 + 0 ;break;end if ((v316==((884 -(834 + 50)) -(0 -0))) or ((3404 -(1284 + 557))==((1509 -647) + 1982))) then v218=v105[5 -3 ];v219={};v316=2 -1 ;end end end if (((1 -0)==v217) or ((3038 -1571)<=(38 + 33))) then for v332=1 -0 , #v102 do local v333=0;local v334;local v335;local v336;while true do if (((1595 -331)>(4841 -3708)) and (v333==(0 + 0))) then v334=1527 -(1302 + 225) ;v335=nil;v333=1883 -(26 + 1856) ;end if (((66 + 1855)==1921) and (v333==(1 + 0))) then v336=nil;while true do if (((12601 -10057)==((3864 -(341 + 284)) -695)) and ((0 + 0)==v334)) then local v394=379 -((52 -(16 + 17)) + 360) ;while true do if ((v394==((0 -0) + 0)) or ((3429 -((2867 -(641 + 727)) + 434))==(11108 -8162))) then v335=0 -0 ;v336=nil;v394=(538 -(215 + 322)) + 0 ;end if ((v394==(94 -(29 + 64))) or (((5593 -(58 + 162)) -(1233 + (597 -(51 + 32))))>4637)) then v334=(1 + 1) -1 ;break;end end end if (((797 -192)<=(719 + 1097)) and (v334==1)) then while true do if ((v335==((0 + 0) -0)) or ((2788 -(178 + 305))<(2910 -(1267 + 296)))) then v336=v102[v332];for v422=(2840 -(1088 + 455)) -((3006 -(1689 + 130)) + 110) , #v336 do local v423=777 -((228 -109) + 658) ;local v424;local v425;local v426;local v427;local v428;while true do if ((v423==(4 -3)) or ((4167 -(467 + 1296))>=(4253 -(337 + 414)))) then v426=nil;v427=nil;v423=2;end if (((195 + 942 + (12118 -8888))==(1196 + 3171)) and (v423==(143 -(84 + 57)))) then v428=nil;while true do if (((374 + 409)<(17055 -12187)) and (v424==2)) then while true do if (((2921 -1503)>(3955 -2576)) and (v425==(1 -0))) then v428=v426[2 -0 ];if (((1859 + (2648 -(352 + 521)))>(1183 + 527)) and (v427==v103) and (v428>=v218)) then local v437=1716 -((1446 -(841 + 8)) + 1119) ;while true do if (((3073 -(1115 + 452))<=4797) and (v437==(0 + 0))) then v219[v428]=v427[v428];v426[1]=v219;break;end end end break;end if ((v425==(1496 -(1129 + 367))) or ((9491 -5005)<(2224 -(294 + 325)))) then local v435=0 + 0 ;local v436;while true do if ((v435==(0 + 0)) or ((765 + (3587 -2322))>(1284 + 866))) then v436=0 -0 ;while true do if ((v436==(3 -2)) or ((4900 -(956 + 337))<14)) then v425=1 -0 ;break;end if ((v436==(0 + 0)) or ((80 + 561 + 1228)<=(4601 -2838))) then v426=v336[v422];v427=v426[1 + 0 ];v436=1 + 0 ;end end break;end end end end break;end if ((v424==0) or ((2281 + 1661)<=(8377 -5263))) then local v431=0 -0 ;while true do if (((6320 -(1323 + 648))>=(11249 -7703)) and (v431==1)) then v424=1 + 0 ;break;end if ((v431==(1385 -(1221 + 164))) or (2462<=1948)) then v425=0 + 0 ;v426=nil;v431=1;end end end if ((v424==(55 -(30 + 24))) or ((3132 + 602)<(5957 -(4028 -1633)))) then v427=nil;v428=nil;v424=1 + 1 + 0 ;end end break;end if ((v423==0) or ((16796 -13228)<=2590)) then v424=0 -0 ;v425=nil;v423=2 -1 ;end end end break;end end break;end end break;end end end break;end end break;end end end elseif (((3635 -1723)>(264 + 1552)) and (v106<=((167 -107) -39))) then v103[v105[6 -4 ]]=v105[1415 -((2409 -(661 + 891)) + 555) ];elseif (((4439 -(181 + 545))==3713) and (v106==(1626 -(782 + 822)))) then v103[v105[(406 + 399) -(637 + 166) ]]= #v103[v105[1979 -(26 + 54 + 1896) ]];else v103[v105[5 -3 ]][v105[5 -2 ]]=v105[680 -(342 + 334) ];end elseif ((v106<=(1825 -(900 + 890))) or (3160>=(552 + 3922))) then if (((295 + 211)<=(995 -307)) and (v106<=29)) then if ((v106<=(845 -(240 + 579))) or (3441==2215)) then if ((v106<=(78 -54)) or ((4505 -(30 + 18))==((2450 + 3296) -1551))) then local v163=1013 -(964 + 49) ;local v164;local v165;local v166;local v167;local v168;local v169;local v170;while true do if ((v163==0) or ((835 + 1407)>((653 + 3889) -(511 + (177 -(4 + 12)))))) then v164=0 -0 ;v165=nil;v163=1;end if ((v163==2) or (1446==(1070 + 48))) then v168=nil;v169=nil;v163=1 + 2 ;end if (((3602 -2717)<(16401 -12851)) and (v163==(1866 -(1408 + 455)))) then v170=nil;while true do if ((v164==(5 -2)) or ((1332 -(331 + 87))>2427)) then while true do if ((((1865 -(990 + 468)) + 33 + 382)<3933) and (v165==1)) then local v337=1114 -(1106 + 8) ;local v338;while true do if (((80 + 745)>(1390 -(2726 -1677))) and (v337==(0 -0))) then v338=0 -0 ;while true do if (((415 + (4493 -3160))<(8706 -6195)) and (v338==(1053 -(307 + 745)))) then v165=1200 -(651 + 547) ;break;end if ((v338==(1252 -(376 + 876))) or ((1317 -(183 + 75))<=(263 + 47))) then local v395=0 + 0 ;while true do if ((v395==(0 -0)) or ((1236 -315)>=((2579 -(732 + 334)) + 178))) then v168=v166 + (4 -(1985 -(1407 + 576))) ;v169={v103[v166](v103[v166 + 1 ],v103[v168])};v395=1 + 0 + 0 ;end if (((1076 + 825)<=(1807 + (932 -(230 + 16)))) and ((1 -0)==v395)) then v338=(834 + 275) -(610 + (1682 -(825 + 359))) ;break;end end end end break;end end end if (((6 -3)==v165) or (((6694 -(796 + 1123)) -1611)>4329)) then if (v170 or ((6784 -1827)==(827 + 357))) then local v361=0 + 0 + 0 ;local v362;local v363;while true do if (((13913 -10043)>=540) and (v361==(1440 -(1279 + 161)))) then v362=0;v363=nil;v361=1 + 0 ;end if ((v361==(4 -3)) or (((2531 -1960) -425)>(10694 -(2354 + 3513)))) then while true do if ((v362==0) or ((1059 + 430)==408)) then v363=557 -(204 + 353) ;while true do if ((v363==(1438 -(791 + 647))) or ((1028 -(344 + 87))>=(1776 + 377))) then v103[v168]=v170;v77=v105[294 -(206 + 85) ];break;end end break;end end break;end end else v77=v77 + 1 ;end break;end if (((1039 + (485 -(31 + 14)))==(1656 -(97 + 80))) and (v165==0)) then local v339=1301 -(4 + 737 + 560) ;while true do if ((v339==0) or ((8504 -4601)<=(13603 -(4741 + 5423)))) then v166=v105[2 -0 ];v167=v105[4];v339=4 -3 ;end if (((649 + 1931)>=(1810 -972)) and (v339==(1982 -((665 -301) + 1617)))) then v165=1 + 0 ;break;end end end if ((v165==((288 -(154 + 133)) + 1)) or (4971<103)) then local v340=1287 -(465 + 822) ;local v341;while true do if (((11110 -6383)>(2423 -(133 + 1403))) and (v340==(0 + 0))) then v341=0;while true do if ((v341==(4 -(5 -2))) or (4943<((16338 -(1702 + 188)) -9596))) then v165=1 + 2 ;break;end if ((v341==(1187 -(464 + 723))) or ((6680 -(77 + 1892))<1713)) then for v404=1506 -(603 + 902) ,v167 do v103[v168 + v404 ]=v169[v404];end v170=v169[1 + 0 ];v341=1;end end break;end end end end break;end if ((v164==(1 + 0)) or ((4770 + 74)<(588 -(74 + 280)))) then local v291=0 -0 ;while true do if ((v291==(1091 -(1075 + 15))) or ((264 + 999)<=(1722 -(2110 -939)))) then v164=2 -0 ;break;end if ((2811==(6134 -3323)) and (v291==(408 -(72 + 59 + 277)))) then v167=nil;v168=nil;v291=1 + 0 ;end end end if ((v164==((690 -(198 + 489)) -1)) or (((4576 -(76 + 898)) -(560 + 3))>=3933)) then local v292=0 -0 ;while true do if ((v292==(338 -(25 + 313))) or ((440 -(67 + 102))>=2051)) then v169=nil;v170=nil;v292=680 -(178 + 257 + 244) ;end if ((v292==(1 + 0)) or ((4843 -(1103 + 116))<=(2165 + 325))) then v164=3;break;end end end if ((v164==(1709 -(679 + 1030))) or (1466==(4805 -(35 + 30)))) then v165=0 + (1080 -(816 + 264)) ;v166=nil;v164=1 + 0 ;end end break;end if (((2581 -(267 + 143))<=(3191 + 1347)) and (v163==((870 -(41 + 828)) + 0))) then v166=nil;v167=nil;v163=(2 -1) + 1 ;end end elseif ((4733==(7748 -3015)) and (v106>(1272 -(564 + 441 + 242)))) then local v223=0;local v224;local v225;local v226;local v227;while true do if ((v223==(1 + 0)) or (3694==462)) then v226=nil;v227=nil;v223=1 + 1 ;end if (((886 + 1276)==(3920 -1758)) and (v223==(440 -(345 + 93)))) then while true do if ((v224==(1 -0)) or ((1917 + 1529)<(1 + 13))) then local v317=0;local v318;while true do if ((v317==(1186 -(741 + 445))) or ((1409 -552)>(1703 + 284))) then v318=0 + 0 ;while true do if ((v318==(0 + 0 + 0)) or ((15366 -12001)>(5529 -1481))) then v227=v103[v225] + v226 ;v103[v225]=v227;v318=1 + (86 -(11 + 75)) ;end if ((v318==(1 -0)) or ((421 + 214)>(9544 -5138))) then v224=856 -(4 + 850) ;break;end end break;end end end if ((v224==(0 + 0)) or ((5763 -2684)>=(9521 -6074))) then local v319=0 -0 ;while true do if ((v319==(1 + 0)) or (((2068 -1559) + 2513)>=3197)) then v224=1277 -(120 + 1156) ;break;end if ((v319==0) or ((2243 -1628)==(4077 -(32 + 21)))) then v225=v105[728 -(536 + 190) ];v226=v103[v225 + (4 -2) ];v319=1885 -(1038 + 846) ;end end end if (((712 -460)<(1266 + 2587)) and (v224==2)) then if ((v226>(0 -(0 -0))) or ((533 + 1241)<(740 -215))) then if ((((2451 + 1268) -(801 + 725))<=(4645 + 163)) and (v227<=v103[v225 + (1 -0) + 0 ])) then local v378=0;local v379;while true do if (((3976 + (2347 -1538))>(2265 + 31)) and ((311 -(30 + 281))==v378)) then v379=0;while true do if ((v379==(0 -0)) or ((946 + 229)>=(367 + 1178))) then v77=v105[(953 -(732 + 91)) -(53 + 74) ];v103[v225 + 3 ]=v227;break;end end break;end end end elseif (((1781 + 2546)>(690 -270)) and (v227>=v103[v225 + (1496 -(1139 + 356)) ])) then local v380=0 + 0 ;while true do if ((v380==0) or (2979<2423)) then v77=v105[982 -(63 + 916) ];v103[v225 + 3 + 0 ]=v227;break;end end end break;end end break;end if (((1240 + 697)<(3496 -(128 + 321))) and (v223==(0 + 0))) then v224=0 + 0 ;v225=nil;v223=1;end end else v103[v105[(833 -515) -(149 + 167) ]]=v103[v105[3 -0 ]][v103[v105[7 -3 ]]];end elseif ((v106<=(7 + 20)) or ((121 + 608 + 1803 + 628)<=(2932 -(172 + 990)))) then v103[v105[16 -(7 + 0 + 7) ]]();elseif (((1422 + 485)<2901) and (v106>(15 + 13))) then v103[v105[2]]=v43(v98[v105[2 + 1 ]],nil,v46);elseif ( not v103[v105[2]] or ((10091 -(4936 + 2651))<((18 + 2133) -(653 + 166 + 106)))) then v77=v77 + 1 ;else v77=v105[3];end elseif ((v106<=(235 -(88 + (432 -(152 + 165))))) or ((3084 -(753 + 648))==(4661 -(628 + 158)))) then if ((3879<=(5605 -(117 + 519))) and (v106<=((59 -36) + 7))) then v77=v105[964 -(640 + 321) ];elseif (((215 + 217)<(1415 + 2429)) and (v106>31)) then local v231=1815 -(660 + 1155) ;local v232;local v233;local v234;while true do if (((9427 -6428)==(4835 -(1025 + 811))) and (v231==1)) then v234=nil;while true do if (((0 -0)==v232) or (((1481 + 938) -865)>=4988)) then local v320=0 + 0 + 0 ;while true do if (((2664 + 1440)<(23 + 2 + 4915)) and (v320==(0 + 0))) then v233=(487 + 200) -(190 + 497) ;v234=nil;v320=1 + 0 ;end if (((7107 -3759)==(6063 -2715)) and (v320==((1219 -(146 + 1072)) + 0))) then v232=1 + 0 ;break;end end end if ((v232==(1475 -(1365 + 109))) or (((1645 -(72 + 832)) -(166 + 558))>(3963 -2737))) then while true do if ((v233==0) or ((10488 -7348)>(11172 -7096))) then v234=v105[(7 -5) -(0 + 0) ];v103[v234]=v103[v234](v14(v103,v234 + 1 ,v105[380 -(136 + 241) ]));break;end end break;end end break;end if ((v231==0) or (1552>=(315 + 489 + 764))) then v232=0 + 0 ;v233=nil;v231=1;end end else v103[v105[3 -1 ]]=v103[v105[1450 -(1293 + 154) ]] + v105[3 + 1 ] ;end elseif ((1096<=((8290 -(264 + 652)) -2535)) and (v106<=(90 -57))) then local v172=0 + 0 ;local v173;local v174;local v175;local v176;local v177;while true do if ((1==v172) or (3434==(118 + 31))) then v175=nil;v176=nil;v172=1 + 1 ;end if ((v172==(223 -((1321 -(1010 + 129)) + 39))) or ((1341 -(95 + 82))==(1019 + 2751))) then v177=nil;while true do if ((v173==2) or ((98 + 649)>=(1150 + 3384))) then for v309=v174,v78 do local v310=0 -0 ;local v311;local v312;while true do if ((v310==0) or ((1250 + 1738)<=((8811 -(109 + 1855)) -4980))) then v311=(0 -0) -0 ;v312=nil;v310=1 -0 ;end if (((4040 -(139 + 61))>=(331 + 1746)) and ((3 -2)==v310)) then while true do if (((2611 -(1344 + 595))<(1805 + 2359)) and ((251 -(125 + 126))==v311)) then v312=0 -0 ;while true do if ((2503<=(3055 + 89)) and (v312==(1824 -(1396 + 428)))) then v177=v177 + 1 + (0 -0) ;v103[v309]=v175[v177];break;end end break;end end break;end end end break;end if (((2265 + 910)>=(2898 -(18 + 1088))) and ((1 + 0)==v173)) then v78=(v176 + v174) -(1129 -(935 + 193)) ;v177=1724 -(1716 + 8) ;v173=4 -2 ;end if (((5315 -((481 -(407 + 55)) + 429))>=(275 + 2206)) and (v173==((67 + 224) -(170 + 121)))) then v174=v105[2];v175,v176=v100(v103[v174](v14(v103,v174 + (751 -(633 + 117)) ,v105[3 -0 ])));v173=(1015 -(392 + 552)) -(60 + 10) ;end end break;end if (((6093 -(1509 + 138))>(218 + (1095 -(463 + 61)))) and (v172==(686 -(481 + 205)))) then v173=0 + 0 ;v174=nil;v172=1 -0 ;end end elseif ((v106>(1773 -(1533 + 206))) or ((1176 + 90)>(4774 -(298 + 198)))) then v103[v105[3 -1 ]]=v105[3 -0 ] + v103[v105[2 + 2 ]] ;else local v237=1643 -(1244 + (904 -505)) ;local v238;local v239;local v240;while true do if ((v237==((115 + 1352) -((1483 -441) + 423))) or ((1429 + 206)>=(5048 -(589 + 804)))) then for v294=3 -2 ,v105[6 -2 ] do local v295=0 -0 ;local v296;while true do if (((2072 -(933 + 229 + 566))<4068) and (v295==(868 -(83 + 785)))) then v77=v77 + (267 -(131 + 135)) ;v296=v97[v77];v295=1 + 0 ;end if ((3812==((5278 -(18 + 365)) -(527 + 556))) and (v295==(300 -(129 + (2167 -(905 + 1092)))))) then if ((v296[1 + 0 ]==((1661 -(741 + 916)) + 11)) or ((2369 + 520)>=(14567 -11493))) then v240[v294-(1 + 0) ]={v103,v296[1154 -(247 + 904) ]};else v240[v294-(1 -0) ]={v45,v296[793 -(720 + 70) ]};end v102[ #v102 + ((2946 -(1656 + 230)) -(655 + 304 + 100)) ]=v240;break;end end end v103[v105[1 + 1 ]]=v43(v238,v239,v46);break;end if (((0 -0)==v237) or (4130<(6112 -4499))) then local v284=0;while true do if (((3095 -(813 + 354))<=(4914 -(152 + 81))) and (v284==(1879 -(1025 + 482 + 371)))) then v237=1186 -(667 + 518) ;break;end if ((v284==0) or ((94 + 1125)>=(2406 -(715 + 68)))) then v238=v98[v105[6 -3 ]];v239=nil;v284=1 + 0 ;end end end if ((v237==1) or ((18255 -14463)>=(12466 -7947))) then local v285=545 -(306 + 239) ;while true do if ((v285==(1357 -(478 + 879))) or ((752 -(34 + 649))==(4298 -(1324 + 567)))) then v240={};v239=v11({},{__index=function(v322,v323)local v344=0 + 0 ;local v345;local v346;while true do if ((v344==(0 + 0)) or ((2096 -(758 + 145 + 90))<=(1256 -575))) then v345=940 -(96 + 844) ;v346=nil;v344=1368 -(130 + 1237) ;end if (((4724 -(850 + 105 + 1041))>1812) and (v344==(3 -(4 -2)))) then while true do if (((82 + 356)<=(1557 + 3385)) and (v345==0)) then local v399=1328 -(1003 + 325) ;while true do if ((((3970 -(1135 + 147)) -(1112 + 792))<(4915 -(82 + 511))) and (v399==(1525 -(424 + 1101)))) then v346=v240[v323];return v346[1494 -(1383 + 110) ][v346[2]];end end end end break;end end end,__newindex=function(v322,v323,v324)local v347=(0 + 0) -0 ;local v348;while true do if ((v347==(1551 -(38 + 1513))) or ((3718 -(350 + 171))>=(4882 -(425 + 1138)))) then v348=v240[v323];v348[1 + 0 ][v348[1387 -(812 + 573) ]]=v324;break;end end end});v285=3 -2 ;end if (((2080 + 1668)>=2840) and (v285==((1 + 1) -(1 + 0)))) then v237=2;break;end end end end end elseif ((v106<=41) or ((12137 -7838)<768)) then if ((v106<=38) or (1558<=(753 -339))) then if ((4446>(569 -(102 + 231))) and (v106<=(100 -64))) then v103[v105[430 -(368 + 60) ]]=v45[v105[8 -5 ]];elseif (((3346 -(1362 + 435 + 149))<=(2806 -(5 + 235))) and (v106>(1816 -(753 + 1026)))) then v103[v105[2]]=v103[v105[3]] -v105[11 -7 ] ;else v103[v105[1 + 1 ]]=v46[v105[(15 -10) -2 ]];end elseif ((v106<=(56 -(10 + 7))) or ((5474 -(1199 + 377))>(9913 -5982))) then local v180=0 -0 ;local v181;local v182;local v183;while true do if (((3590 -(69 + 835))<=(4844 -(361 + 1483))) and (v180==(1 + 0))) then v183=nil;while true do if ((v181==(0 + 0)) or (((44925 -28005) -12451)<=(3617 -(531 + 538)))) then local v297=0 -(0 + 0) ;local v298;while true do if (((8813 -4705)>266) and (v297==(0 + 0))) then v298=0 + 0 ;while true do if ((v298==(1 + 0)) or ((3928 + 1040)==(6995 -3834))) then v181=1;break;end if (((228 -(194 + 34))==v298) or ((916 + 3795)<1209)) then local v383=0 + (708 -(245 + 463)) ;while true do if (((2964 -(141 + 35))==(429 + 2359)) and (v383==(0 + 0))) then v182=v105[712 -(690 + 20) ];v183=v103[v105[4 -1 ]];v383=1 + 0 ;end if (((8590 -4696)==(1976 + 1918)) and ((1 + 0)==v383)) then v298=1 + 0 ;break;end end end end break;end end end if (((1 + 0)==v181) or ((6419 -2874)==(6100 -(538 + 624)))) then v103[v182 + (1 -0) ]=v183;v103[v182]=v183[v105[4]];break;end end break;end if (((1369 -(330 + (2139 -(387 + 713))))==v180) or ((6315 -(1693 + 146))<(511 + 331))) then v181=0 + 0 ;v182=nil;v180=(5 -3) -1 ;end end elseif (((4792 -3703)<(2656 + 1745)) and (v106>(18 + 22))) then local v244=0 + 0 ;local v245;local v246;local v247;local v248;local v249;local v250;while true do if ((v244==2) or ((5778 -(302 + 1470))<(3217 -(351 + 209)))) then v249=nil;v250=nil;v244=3;end if (((583 -299)<(5640 -(570 + 257))) and (v244==(14 -11))) then while true do if (((3041 + 790)>=2856) and (v245==(1 + 0))) then local v325=0 -0 ;while true do if (((7119 -5337)>=1033) and (v325==(0 + 0))) then v248=nil;v249=nil;v325=2 -1 ;end if ((v325==(1804 -(1466 + 337))) or (2213>(4932 -(1463 + 383)))) then v245=2;break;end end end if ((4972==(5093 -(19 + 102))) and (v245==(0 + 0))) then v246=0;v247=nil;v245=1;end if ((v245==(1 + 1)) or (2013>((9027 -(222 + 474)) -4421))) then v250=nil;while true do if ((2420<=(4478 -(844 + 199))) and (v246==(1 -0))) then local v370=0 + 0 ;local v371;while true do if (((7010 -2617)>=52) and (v370==(196 -(75 + 121)))) then v371=0;while true do if (((3322 + 1111)>(149 + 270)) and (v371==(1705 -(136 + (2467 -(104 + 795)))))) then v246=1 + 1 ;break;end if ((515<(3649 -2755)) and (v371==0)) then v78=(v249 + v247) -(3 -(4 -2)) ;v250=624 -(52 + 572) ;v371=651 -(594 + 56) ;end end break;end end end if ((636<(1642 -(16 + 100 + 672))) and (v246==(3 -1))) then for v384=v247,v78 do local v385=303 -(99 + 204) ;local v386;while true do if (((0 + 0)==v385) or ((3971 + 983)<=(6468 -2842))) then v386=639 -(10 + 629) ;while true do if (((1230 -(58 + 1172))==v386) or ((66 + 157 + 248)==(4461 -(898 + 293)))) then v250=v250 + (1 -0) ;v103[v384]=v248[v250];break;end end break;end end end break;end if (((932 -538)<3409) and (v246==0)) then local v372=0;local v373;while true do if ((v372==0) or (1378<=(1888 -(284 + 683)))) then v373=0;while true do if ((v373==1) or ((5504 -3478)<=(335 -(175 + 2)))) then v246=1 + (0 -0) ;break;end if ((v373==(579 -(511 + 68))) or ((4135 -(471 + (2565 -1541)))>(11613 -8705))) then v247=v105[1201 -((1353 -(207 + 10)) + 63) ];v248,v249=v100(v103[v247](v103[v247 + (246 -(169 + 76)) ]));v373=2 -1 ;end end break;end end end end break;end end break;end if (((1116 -(801 + 314))==v244) or ((204 -150)>2491)) then v247=nil;v248=nil;v244=2 + 0 ;end if (((0 -0)==v244) or (993==(4903 -(130 + 379)))) then v245=1826 -((1328 -(113 + 558)) + 1169) ;v246=nil;v244=1 -(0 + 0) ;end end elseif (((152 + 4702)==(6773 -(537 + 1382))) and v103[v105[4 -2 ]]) then v77=v77 + (718 -(381 + 336)) ;else v77=v105[3];end elseif (((2418 -(115 + 494))<=(751 + 3984)) and (v106<=(38 + 6))) then if (((2451 -(386 + 860))<=(1691 + 236 + 4)) and (v106<=(34 + 8))) then v103[v105[2 + 0 ]]=v103[v105[978 -(626 + 349) ]]%v103[v105[4]] ;elseif (((101 + 5 + 1153)>=(982 -(165 + 257))) and (v106>(12 + 31))) then local v251=1619 -(744 + 875) ;local v252;local v253;while true do if (((743 + 1762)<(3776 + 986)) and (v251==(295 -(56 + 238)))) then while true do if (((3013 -1993)>=(2099 -1396)) and (v252==((3075 -(1707 + 263)) -(176 + 929)))) then v253=v103[v105[(1553 -(706 + 843)) + 0 ]];if ( not v253 or ((5484 -(1688 -(47 + 79)))<=(4230 -(482 + (2678 -(787 + 575)))))) then v77=v77 + 1 ;else local v356=0 -(0 + 0) ;local v357;while true do if ((v356==0) or ((485 -(318 + 64))>(1987 -1375))) then v357=0;while true do if (((1000 -(870 + 130))==v357) or ((5009 -2512)>=(1164 + (4454 -(1005 + 338))))) then v103[v105[(4 -2) + 0 ]]=v253;v77=v105[4 -(2 -1) ];break;end end break;end end end break;end end break;end if (((7308 -3521)>(4574 -3493)) and (v251==(0 + 0))) then v252=0 + 0 ;v253=nil;v251=1;end end else local v254=1811 -(63 + 1748) ;local v255;local v256;local v257;while true do if ((v254==(587 -(460 + 126))) or ((362 + 154)>(3856 + 474))) then v257=nil;while true do if (((15258 -11591)<(7160 -3125)) and (v255==(1 + 0))) then for v349=v256 + 1 + 0 + 0 ,v78 do v8(v257,v103[v349]);end break;end if ((v255==(46 -(21 + 25))) or (((7819 -4460) -2367)>=3662)) then local v327=0;while true do if ((v327==(0 + 0)) or ((204 + 281)==1019)) then v256=v105[1217 -(416 + 799) ];v257=v103[v256];v327=(1790 -(342 + 1135)) -(283 + 29) ;end if ((v327==(1 + 0 + 0)) or ((6912 -4833)<(1631 -(447 + 596)))) then v255=(2 + 0) -1 ;break;end end end end break;end if (((31 + 147)<=(857 + 1617)) and (0==v254)) then v255=0;v256=nil;v254=1161 -(245 + 915) ;end end end elseif ((2642<(5418 -(917 + 813))) and (v106<=(519 -(268 + 206)))) then v103[v105[2]][v103[v105[(1 -0) + 2 ]]]=v103[v105[1564 -(391 + 1169) ]];elseif ((v106==46) or (2645<=(2427 -(813 + 219)))) then local v258=19 -(4 + 7 + 8) ;local v259;local v260;local v261;local v262;local v263;while true do if ((v258==(0 -0)) or ((3376 -(37 + 58))<=(4504 -2908))) then v259=0 + 0 ;v260=nil;v258=1227 -(651 + (1197 -(277 + 345))) ;end if (((1486 + 1966)<(4242 -(41 + 97 + 202))) and (v258==(2 -1))) then v261=nil;v262=nil;v258=1820 -(270 + 1548) ;end if ((v258==(870 -(561 + 307))) or ((4922 -2811)>=(4802 -(89 + 673)))) then v263=nil;while true do if ((v259==(0 + 0)) or ((1783 -(1544 + 33))>2625)) then v260=v105[3 -1 ];v261,v262=v100(v103[v260](v14(v103,v260 + (295 -(178 + 116)) ,v78)));v259=1;end if ((((310 + 2164) -(196 + 98))<(9140 -5136)) and (v259==(1 + (0 -0)))) then v78=(v262 + v260) -(3 -2) ;v263=(0 + 0) -0 ;v259=1 + (1754 -(1293 + 460)) ;end if ((v259==(6 -4)) or ((5583 -(809 + 274))==(5011 -1898))) then for v350=v260,v78 do local v351=(3060 -(507 + 1460)) -(1083 + 10) ;while true do if ((2665<(2611 + 486)) and (v351==0)) then v263=v263 + ((717 -137) -((1302 -(192 + 782)) + 102 + 149)) ;v103[v350]=v261[v263];break;end end end break;end end break;end end elseif ((v103[v105[713 -(59 + 652) ]]==v103[v105[11 -7 ]]) or (4503>=(483 + 4320))) then v77=v77 + 1 ;else v77=v105[1 + 2 ];end v77=v77 + 1 ;break;end if ((v109==0) or ((77 -42)>3794)) then v105=v97[v77];v106=v105[2 -1 ];v109=1211 -(216 + 994) ;end end end end;v76=3;end if (3==v76) then A,B=v41(v12(v81));if  not A[1] then local v110=0;local v111;while true do if (0==v110) then v111=v44[4][v77] or "?" ;error("Script error at ["   .. v111   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end break;end if (0==v76) then v77=1;v78= -1;v76=1;end end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
